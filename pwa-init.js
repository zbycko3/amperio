'use strict';if(navigator.serviceWorker){window.addEventListener("load",function(){navigator.serviceWorker.register("/pwa-sw.js?v1.0.2")});navigator.serviceWorker.getRegistration().then(function(registration){if(registration&&registration.active){document.cookie="pwaMode=pwa;path=/"}else{document.cookie="pwaMode=website;path=/"}})}else{document.cookie="pwaMode=website;path=/"}var config={messagingSenderId:"875919489669"};var token;var messaging;var sendTokenToServer=function sendTokenToServer(currentToken,data){var xmlhttp=new XMLHttpRequest;xmlhttp.open("POST","/subscribetotopic");xmlhttp.setRequestHeader("Content-Type","application/json;charset=UTF-8");xmlhttp.send(JSON.stringify({"jsonrpc":"2.0","method":"subscribeToTopic","params":{"token":currentToken,"topics":data,"host":window.location.host,"platform":"web"}}))};var notificationHandler=function notificationHandler(payload){var income=payload.data;var messageData={title:income.title,body:income.body,icon:income.icon,data:income.data,image:income.image,onClick:JSON.parse(income.data).openUrl};navigator.serviceWorker.getRegistration().then(function(registration){registration.showNotification(messageData.title,messageData);dataLayer.push({"pwaEventAction":"PWAShowNotification","pwaEventLabel":"PWA Show Notification","event":"PWAShowNotification"});registration.onnotificationclick=function(item){dataLayer.push({"pwaEventAction":"PWAOpenNotification","pwaEventLabel":"PWA Open Notification","event":"PWAOpenNotification"});this.close();window.open(messageData.onClick)};registration.onnotificationclose=function(item){dataLayer.push({"pwaEventAction":"PWACloseNotification","pwaEventLabel":"PWA Close Notification","event":"PWACloseNotification"})}})};var pushTrigger=function pushTrigger(){navigator.serviceWorker.getRegistration().then(function(registration){if(registration){if(firebase.apps.length===0){firebase.initializeApp(config);messaging=firebase.messaging();messaging.useServiceWorker(registration)}registration.pushManager.getSubscription().then(function(){messaging.requestPermission().then(function(){dataLayer.push({pwaEventAction:"PWANotificationRequestAccept",pwaEventLabel:"PWA Notification Request Accept",event:"PWANotificationRequestAccept"});dataLayer.push({pwaEventAction:"PWAPushSubscribe",pwaEventLabel:"PWA Push Subscribe",event:"PWAPushSubscribe"});messaging.getToken().then(function(currentToken){if(currentToken){sendTokenToServer(currentToken,[{"codeName":"www.skapiec.pl","displayName":"Sk\u0105piec"}]);localStorage.setItem("hasSendPushToken","true")}else{dataLayer.push({pwaEventAction:"PWAPushTokenNotSent",pwaEventLabel:"PWA Push Token Not Sent",event:"PWAPushTokenNotSent"})}})["catch"](function(err){console.log(err.message);dataLayer.push({pwaEventAction:"PWAPushError",pwaEventLabel:"PWA Push Error",event:"PWAPushError"})})})["catch"](function(err){console.log("Unable to get permission to notify.",err.message)})})["catch"](function(err){console.log("Unable to get subscription data.",err.message)})}else{setTimeout(pushTrigger,5000)}})};var pushHandler=function pushHandler(){navigator.serviceWorker.getRegistration().then(function(registration){if(registration){if(firebase.apps.length===0){firebase.initializeApp(config);messaging=firebase.messaging();messaging.useServiceWorker(registration)}messaging.onTokenRefresh(function(){messaging.getToken().then(function(refreshedToken){if(refreshedToken){sendTokenToServer(refreshedToken,[{"codeName":"www.skapiec.pl","displayName":"Sk\u0105piec"}])}})["catch"](function(err){console.log(err.message)})});messaging.onMessage(function(payload){notificationHandler(payload)})}else{setTimeout(pushHandler,5000)}})};document.addEventListener("DOMContentLoaded",function(event){if(!(navigator.userAgent.indexOf("Safari")!=-1&&navigator.userAgent.indexOf("Chrome")==-1)){if(navigator.serviceWorker){pushHandler();permissionHandle(Notification.permission)}}});var permissionHandle=function permissionHandle(flag){switch(flag){case"granted":if(!localStorage.getItem("hasSendPushToken")){pushTrigger()}break;case"denied":break;case"default":pushTrigger();break;default:console.log("Flag not specified");break;}};
